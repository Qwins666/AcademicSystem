{"version":3,"file":"js/748.f8ab9006.js","mappings":"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","sources":["webpack://academic-management-frontend/./src/views/activity/ActivityList.vue","webpack://academic-management-frontend/./src/views/activity/ActivityList.vue?3cc3","webpack://academic-management-frontend/./src/api/activity.js"],"sourcesContent":["<template>\r\n  <div class=\"activity-list\">\r\n    <div class=\"page-header\">\r\n      <h1>学术活动</h1>\r\n      <el-button \r\n        type=\"primary\" \r\n        @click=\"handleCreate\"\r\n        v-if=\"hasPermission(['TEACHER', 'ADMIN'])\"\r\n      >\r\n        <el-icon><Plus /></el-icon>\r\n        发布活动\r\n      </el-button>\r\n    </div>\r\n\r\n    <!-- 搜索栏 -->\r\n    <div class=\"search-container\">\r\n      <el-form :model=\"searchForm\" inline>\r\n        <el-form-item label=\"活动标题\">\r\n          <el-input \r\n            v-model=\"searchForm.title\" \r\n            placeholder=\"请输入活动标题\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"活动类型\">\r\n          <el-select v-model=\"searchForm.type\" style=\"width: 120px\" placeholder=\"请选择类型\" clearable>\r\n            <el-option label=\"讲座\" value=\"LECTURE\" />\r\n            <el-option label=\"赛事\" value=\"COMPETITION\" />\r\n            <el-option label=\"培训\" value=\"TRAINING\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"searchForm.status\" style=\"width: 120px\" placeholder=\"请选择状态\" clearable>\r\n            <el-option label=\"草稿\" value=\"DRAFT\" />\r\n            <el-option label=\"已发布\" value=\"PUBLISHED\" />\r\n            <el-option label=\"已取消\" value=\"CANCELLED\" />\r\n            <el-option label=\"已完成\" value=\"COMPLETED\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">\r\n            <el-icon><Search /></el-icon>\r\n            搜索\r\n          </el-button>\r\n          <el-button @click=\"handleReset\">\r\n            <el-icon><Refresh /></el-icon>\r\n            重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 活动列表 -->\r\n    <div class=\"table-container\">\r\n      <el-table :data=\"activityList\" v-loading=\"loading\">\r\n        <el-table-column prop=\"title\" label=\"活动标题\" min-width=\"200\" />\r\n        <el-table-column prop=\"type\" label=\"类型\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getTypeTag(scope.row.type)\">\r\n              {{ getTypeName(scope.row.type) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"organizer\" label=\"主办方\" width=\"150\" />\r\n        <el-table-column prop=\"location\" label=\"地点\" width=\"150\" />\r\n        <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"180\" />\r\n        <el-table-column prop=\"currentParticipants\" label=\"参与人数\" width=\"100\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStatusTag(scope.row.status)\">\r\n              {{ getStatusName(scope.row.status) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button \r\n              type=\"primary\" \r\n              size=\"small\" \r\n              @click=\"handleView(scope.row)\"\r\n            >\r\n              查看\r\n            </el-button>\r\n            <!-- 只有学生角色才显示报名和已报名按钮 -->\r\n            <!-- 先标记为未报名，后面会从响应中获取正确状态 -->\r\n            <el-button \r\n              type=\"success\" \r\n              size=\"small\" \r\n              @click=\"handleJoin(scope.row)\"\r\n              v-if=\"userRole === 'STUDENT' && canJoin(scope.row) && !isUserRegistered(scope.row)\"\r\n            >\r\n              报名\r\n            </el-button>\r\n            <el-button \r\n              type=\"info\" \r\n              size=\"small\" \r\n              disabled\r\n              v-else-if=\"userRole === 'STUDENT' && isUserRegistered(scope.row)\"\r\n            >\r\n              已报名\r\n            </el-button>\r\n            <el-button \r\n              type=\"warning\" \r\n              size=\"small\" \r\n              @click=\"handleEdit(scope.row)\"\r\n              v-if=\"canEdit(scope.row)\"\r\n            >\r\n              编辑\r\n            </el-button>\r\n            <el-button \r\n              type=\"danger\" \r\n              size=\"small\" \r\n              @click=\"handleDelete(scope.row)\"\r\n              v-if=\"canDelete(scope.row)\"\r\n            >\r\n              删除\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"pagination.current\"\r\n          v-model:page-size=\"pagination.size\"\r\n          :total=\"pagination.total\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { getActivityList, deleteActivity, joinActivity } from '@/api/activity'\r\n\r\nexport default {\r\n  name: 'ActivityList',\r\n  setup() {\r\n    const router = useRouter()\r\n    const store = useStore()\r\n    \r\n    const loading = ref(false)\r\n    const activityList = ref([])\r\n    \r\n    const searchForm = reactive({\r\n      title: '',\r\n      type: '',\r\n      status: ''\r\n    })\r\n    \r\n    const pagination = reactive({\r\n      current: 1,\r\n      size: 10,\r\n      total: 0\r\n    })\r\n    \r\n    const userRole = computed(() => store.getters.userRole)\r\n    const userId = computed(() => store.getters.userId) // 获取当前登录用户ID\r\n    \r\n    const hasPermission = (roles) => {\r\n      return roles.includes(userRole.value)\r\n    }\r\n    \r\n    const getTypeName = (type) => {\r\n      const typeMap = {\r\n        'LECTURE': '讲座',\r\n        'COMPETITION': '赛事',\r\n        'TRAINING': '培训'\r\n      }\r\n      return typeMap[type] || type\r\n    }\r\n    \r\n    const getTypeTag = (type) => {\r\n      const tagMap = {\r\n        'LECTURE': 'primary',\r\n        'COMPETITION': 'success',\r\n        'TRAINING': 'warning'\r\n      }\r\n      return tagMap[type] || 'info'\r\n    }\r\n    \r\n    const getStatusName = (status) => {\r\n      const statusMap = {\r\n        'DRAFT': '草稿',\r\n        'PUBLISHED': '已发布',\r\n        'CANCELLED': '已取消',\r\n        'COMPLETED': '已完成'\r\n      }\r\n      return statusMap[status] || status\r\n    }\r\n    \r\n    const getStatusTag = (status) => {\r\n      const tagMap = {\r\n        'DRAFT': 'info',\r\n        'PUBLISHED': 'success',\r\n        'CANCELLED': 'danger',\r\n        'COMPLETED': 'warning'\r\n      }\r\n      return tagMap[status] || 'info'\r\n    }\r\n    \r\n    // 判断当前用户是否已报名活动\r\n    const isUserRegistered = (activity) => {\r\n      // 添加详细调试信息\r\n      console.log('判断报名状态 - 活动ID:', activity.id, '用户ID:', userId.value)\r\n      \r\n      // 确保活动对象存在\r\n      if (!activity) {\r\n        console.log('活动对象不存在')\r\n        return false\r\n      }\r\n      \r\n      // 1. 优先使用后端直接返回的hasRegistered字段（如果有）\r\n      if (typeof activity.hasRegistered === 'boolean') {\r\n        console.log('通过hasRegistered字段检查结果:', activity.hasRegistered)\r\n        return activity.hasRegistered\r\n      }\r\n      \r\n      // 2. 检查是否有registeredUsers数组包含当前用户ID\r\n      if (activity.registeredUsers && Array.isArray(activity.registeredUsers)) {\r\n        const result = activity.registeredUsers.includes(userId.value)\r\n        console.log('通过registeredUsers检查结果:', result)\r\n        return result\r\n      }\r\n      \r\n      // 3. 检查是否有registrations数组，包含当前用户的报名记录\r\n      if (activity.registrations && Array.isArray(activity.registrations)) {\r\n        const result = activity.registrations.some(reg => reg.userId === userId.value)\r\n        console.log('通过registrations检查结果:', result)\r\n        return result\r\n      }\r\n      \r\n      // 默认返回false，确保未报名用户不显示已报名状态\r\n      return false\r\n    }\r\n    \r\n    const canJoin = (activity) => {\r\n      // 直接在这里判断是否可以报名，不依赖isUserRegistered函数\r\n      return userRole.value === 'STUDENT' && \r\n             activity.status === 'PUBLISHED' && \r\n             new Date(activity.registrationDeadline) > new Date()\r\n    }\r\n    \r\n    const canEdit = (activity) => {\r\n      return hasPermission(['TEACHER', 'ADMIN']) && \r\n             activity.status !== 'COMPLETED'\r\n    }\r\n    \r\n    const canDelete = (activity) => {\r\n      return hasPermission(['ADMIN']) || \r\n             (hasPermission(['TEACHER']) && activity.status === 'DRAFT')\r\n    }\r\n    \r\n    const loadActivityList = async () => {\r\n      loading.value = true\r\n      try {\r\n        // 添加调试信息\r\n        console.log('当前登录用户ID:', userId.value, '角色:', userRole.value)\r\n        \r\n        // 构建查询参数，确保只传递有效的搜索条件\r\n        const params = {\r\n          page: pagination.current,\r\n          pageSize: pagination.size\r\n        }\r\n        \r\n        // 检查并添加搜索条件\r\n        if (searchForm.title) {\r\n          const trimmedTitle = searchForm.title.trim()\r\n          if (trimmedTitle) {\r\n            params.title = trimmedTitle\r\n          }\r\n        }\r\n        if (searchForm.type) {\r\n          params.type = searchForm.type\r\n        }\r\n        if (searchForm.status) {\r\n          params.status = searchForm.status\r\n        }\r\n        \r\n        // 调用API获取活动列表\r\n        console.log('发送搜索参数:', params)\r\n        const response = await getActivityList(params)\r\n        \r\n        console.log('API响应:', response)\r\n        \r\n        if (response.code === 200) {\r\n          // 确保正确处理后端响应格式\r\n          const responseData = response.data\r\n          activityList.value = Array.isArray(responseData) ? responseData : (responseData.records || [])\r\n          pagination.total = responseData.total || activityList.value.length\r\n          \r\n          // 调试信息\r\n          console.log('加载到的活动数量:', activityList.value.length)\r\n          console.log('设置的分页总数:', pagination.total)\r\n          \r\n          // 如果有搜索条件但返回了所有数据，可能是后端未正确处理搜索\r\n          const hasSearchCondition = !!params.title || !!params.type || !!params.status\r\n          if (hasSearchCondition) {\r\n            console.log('存在搜索条件，检查后端过滤是否生效')\r\n            // 前端额外过滤作为临时解决方案\r\n            if (params.type) {\r\n              activityList.value = activityList.value.filter(activity => activity.type === params.type)\r\n              console.log('前端按类型过滤后数量:', activityList.value.length)\r\n            }\r\n            if (params.status) {\r\n              activityList.value = activityList.value.filter(activity => activity.status === params.status)\r\n              console.log('前端按状态过滤后数量:', activityList.value.length)\r\n            }\r\n            if (params.title) {\r\n              activityList.value = activityList.value.filter(activity => \r\n                activity.title.toLowerCase().includes(params.title.toLowerCase())\r\n              )\r\n              console.log('前端按标题过滤后数量:', activityList.value.length)\r\n            }\r\n            // 过滤后更新分页总数\r\n            pagination.total = activityList.value.length\r\n          }\r\n          \r\n          // 加载完成后，为每个活动记录报名状态判断结果\r\n          activityList.value.forEach(activity => {\r\n            const registered = isUserRegistered(activity)\r\n            console.log(`活动 ${activity.title} (ID:${activity.id}) - 用户是否已报名:`, registered)\r\n          })\r\n          \r\n        } else {\r\n          ElMessage.error(response.message || '加载活动列表失败')\r\n          activityList.value = []\r\n          pagination.total = 0\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('加载活动列表失败')\r\n        activityList.value = []\r\n        pagination.total = 0\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    const handleSearch = () => {\r\n      pagination.current = 1\r\n      loadActivityList()\r\n    }\r\n    \r\n    const handleReset = () => {\r\n      Object.assign(searchForm, {\r\n        title: '',\r\n        type: '',\r\n        status: ''\r\n      })\r\n      handleSearch()\r\n    }\r\n    \r\n    const handleCreate = () => {\r\n      router.push('/dashboard/activities/create')\r\n    }\r\n    \r\n    const handleView = (activity) => {\r\n      // 查看活动详情\r\n      router.push(`/dashboard/activities/${activity.id}`)\r\n    }\r\n    \r\n    const handleJoin = (activity) => {\r\n      // 添加前置验证\r\n      if (!activity.id) {\r\n        ElMessage.error('活动信息错误，无法报名')\r\n        return\r\n      }\r\n      \r\n      // 检查报名截止时间\r\n      if (new Date(activity.registrationDeadline) <= new Date()) {\r\n        ElMessage.warning('报名已截止')\r\n        return\r\n      }\r\n      \r\n      // 检查是否已达到最大参与人数\r\n      if (activity.currentParticipants >= activity.maxParticipants) {\r\n        ElMessage.warning('活动人数已满')\r\n        return\r\n      }\r\n      \r\n      // 再次确认用户未报名，防止重复报名\r\n      if (isUserRegistered(activity)) {\r\n        ElMessage.warning('您已报名该活动')\r\n        return\r\n      }\r\n      \r\n      ElMessageBox.confirm('确定要报名参加此活动吗？', '确认报名', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          const response = await joinActivity(activity.id)\r\n          if (response.code === 200 || response.success) {\r\n            ElMessage.success(response.message || '报名成功')\r\n            // 重新加载活动列表以更新报名状态\r\n            loadActivityList()\r\n          } else {\r\n            ElMessage.error(response.message || '报名失败')\r\n          }\r\n        } catch (error) {\r\n          const errorMsg = error.response?.data?.message || error.message || '报名失败，请稍后重试'\r\n          ElMessage.error(errorMsg)\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleEdit = (activity) => {\r\n      router.push(`/dashboard/activities/${activity.id}/edit`)\r\n    }\r\n    \r\n    const handleDelete = (activity) => {\r\n      ElMessageBox.confirm('确定要删除此活动吗？', '确认删除', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          const response = await deleteActivity(activity.id)\r\n          if (response.code === 200) {\r\n            ElMessage.success(response.message || '删除成功')\r\n            loadActivityList()\r\n          } else {\r\n            ElMessage.error(response.message || '删除失败')\r\n          }\r\n        } catch (error) {\r\n          ElMessage.error('删除失败，请稍后重试')\r\n        }\r\n      })\r\n    }\r\n    \r\n    const handleSizeChange = (size) => {\r\n      pagination.size = size\r\n      loadActivityList()\r\n    }\r\n    \r\n    const handleCurrentChange = (current) => {\r\n      pagination.current = current\r\n      loadActivityList()\r\n    }\r\n    \r\n    onMounted(() => {\r\n      loadActivityList()\r\n    })\r\n    \r\n    return {\r\n      loading,\r\n      activityList,\r\n      searchForm,\r\n      pagination,\r\n      userRole,\r\n      userId,\r\n      hasPermission,\r\n      getTypeName,\r\n      getTypeTag,\r\n      getStatusName,\r\n      getStatusTag,\r\n      isUserRegistered,\r\n      canJoin,\r\n      canEdit,\r\n      canDelete,\r\n      handleSearch,\r\n      handleReset,\r\n      handleCreate,\r\n      handleView,\r\n      handleJoin,\r\n      handleEdit,\r\n      handleDelete,\r\n      handleSizeChange,\r\n      handleCurrentChange\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.activity-list {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-header h1 {\r\n  margin: 0;\r\n  color: #2c3e50;\r\n}\r\n\r\n.search-container {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table-container {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style>\r\n","import { render } from \"./ActivityList.vue?vue&type=template&id=7e5e5917&scoped=true\"\nimport script from \"./ActivityList.vue?vue&type=script&lang=js\"\nexport * from \"./ActivityList.vue?vue&type=script&lang=js\"\n\nimport \"./ActivityList.vue?vue&type=style&index=0&id=7e5e5917&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7e5e5917\"]])\n\nexport default __exports__","import request from './request'\n\n// 获取活动列表\nexport function getActivityList(params = {}) {\n  return request({\n    url: '/activities',\n    method: 'get',\n    params\n  })\n}\n\n// 获取活动详情\nexport function getActivityById(id) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建活动\nexport function createActivity(data) {\n  return request({\n    url: '/activities',\n    method: 'post',\n    data\n  })\n}\n\n// 更新活动\nexport function updateActivity(id, data) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除活动\nexport function deleteActivity(id) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'delete'\n  })\n}\n\n// 根据状态获取活动列表\nexport function getActivitiesByStatus(status) {\n  return request({\n    url: `/activities/status/${status}`,\n    method: 'get'\n  })\n}\n\n// 报名参加活动\nexport function joinActivity(activityId) {\n  return request({\n    url: `/activities/${activityId}/register`,\n    method: 'post',\n    data: {} // 添加空对象作为data参数，确保请求格式正确\n  })\n}\n\n// 取消活动报名\nexport function cancelJoinActivity(activityId) {\n  return request({\n    url: `/activities/${activityId}/cancel-register`,\n    method: 'post'\n  })\n}\n\n// 生成参与证明\nexport function generateCertificate(activityId) {\n  return request({\n    url: `/activities/${activityId}/certificate`,\n    method: 'get'\n  })\n}\n\n// 下载参与名单\nexport function downloadParticipants(activityId, type = 'excel') {\n  return request({\n    url: `/activities/${activityId}/participants/export`,\n    method: 'get',\n    params: {\n      type: type\n    },\n    responseType: 'blob' // 重要：设置响应类型为blob\n  })\n}"],"names":["class","hasPermission","type","handleCreate","model","searchForm","inline","label","title","placeholder","clearable","style","value","status","handleSearch","handleReset","data","activityList","prop","width","default","getTypeTag","scope","row","getTypeName","getStatusTag","getStatusName","fixed","size","handleView","userRole","canJoin","isUserRegistered","handleJoin","disabled","canEdit","handleEdit","canDelete","handleDelete","loading","pagination","current","total","layout","handleSizeChange","handleCurrentChange","name","setup","router","store","getters","userId","roles","includes","typeMap","tagMap","statusMap","activity","console","log","id","hasRegistered","registeredUsers","Array","isArray","result","registrations","some","reg","Date","registrationDeadline","loadActivityList","async","params","page","pageSize","trimmedTitle","trim","response","code","responseData","records","length","hasSearchCondition","filter","toLowerCase","forEach","registered","error","message","Object","assign","push","warning","currentParticipants","maxParticipants","confirm","confirmButtonText","cancelButtonText","then","success","errorMsg","__exports__","render","getActivityList","url","method","getActivityById","createActivity","updateActivity","deleteActivity","joinActivity","activityId","cancelJoinActivity","generateCertificate","downloadParticipants","responseType"],"sourceRoot":""}