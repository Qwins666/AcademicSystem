{"version":3,"file":"js/367.e32ba724.js","mappings":"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","sources":["webpack://academic-management-frontend/./src/api/activity.js","webpack://academic-management-frontend/./src/views/activity/ActivityDetail.vue","webpack://academic-management-frontend/./src/views/activity/ActivityDetail.vue?078d"],"sourcesContent":["import request from './request'\n\n// 获取活动列表\nexport function getActivityList(params = {}) {\n  return request({\n    url: '/activities',\n    method: 'get',\n    params\n  })\n}\n\n// 获取活动详情\nexport function getActivityById(id) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'get'\n  })\n}\n\n// 创建活动\nexport function createActivity(data) {\n  return request({\n    url: '/activities',\n    method: 'post',\n    data\n  })\n}\n\n// 更新活动\nexport function updateActivity(id, data) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'put',\n    data\n  })\n}\n\n// 删除活动\nexport function deleteActivity(id) {\n  return request({\n    url: `/activities/${id}`,\n    method: 'delete'\n  })\n}\n\n// 根据状态获取活动列表\nexport function getActivitiesByStatus(status) {\n  return request({\n    url: `/activities/status/${status}`,\n    method: 'get'\n  })\n}\n\n// 报名参加活动\nexport function joinActivity(activityId) {\n  return request({\n    url: `/activities/${activityId}/register`,\n    method: 'post',\n    data: {} // 添加空对象作为data参数，确保请求格式正确\n  })\n}\n\n// 取消活动报名\nexport function cancelJoinActivity(activityId) {\n  return request({\n    url: `/activities/${activityId}/cancel-register`,\n    method: 'post'\n  })\n}\n\n// 生成参与证明\nexport function generateCertificate(activityId) {\n  return request({\n    url: `/activities/${activityId}/certificate`,\n    method: 'get'\n  })\n}\n\n// 下载参与名单\nexport function downloadParticipants(activityId, type = 'excel') {\n  return request({\n    url: `/activities/${activityId}/participants/export`,\n    method: 'get',\n    params: {\n      type: type\n    },\n    responseType: 'blob' // 重要：设置响应类型为blob\n  })\n}","<template>\n  <div class=\"activity-detail\">\n    <div class=\"page-header\">\n      <h2>活动详情</h2>\n      <el-button type=\"primary\" @click=\"handleBack\">返回列表</el-button>\n    </div>\n    \n    <div class=\"detail-card\" v-if=\"!loading\">\n      <el-card shadow=\"hover\">\n        <template #header>\n          <div class=\"card-header\">\n            <h3>{{ activity.title }}</h3>\n            <div class=\"status-tag\">\n              <el-tag :type=\"getStatusTag(activity.status)\">{{ getStatusName(activity.status) }}</el-tag>\n            </div>\n          </div>\n        </template>\n        \n        <div class=\"detail-content\">\n          <div class=\"info-row\">\n            <span class=\"label\">活动类型：</span>\n            <el-tag :type=\"getTypeTag(activity.type)\">{{ getTypeName(activity.type) }}</el-tag>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">主办方：</span>\n            <span class=\"value\">{{ activity.organizer }}</span>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">活动地点：</span>\n            <span class=\"value\">{{ activity.location }}</span>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">开始时间：</span>\n            <span class=\"value\">{{ formatDateTime(activity.startTime) }}</span>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">结束时间：</span>\n            <span class=\"value\">{{ formatDateTime(activity.endTime) }}</span>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">报名截止时间：</span>\n            <span class=\"value\">{{ formatDateTime(activity.registrationDeadline) }}</span>\n          </div>\n          \n          <div class=\"info-row\">\n            <span class=\"label\">参与人数：</span>\n            <span class=\"value\">{{ activity.currentParticipants }} / {{ activity.maxParticipants }}</span>\n          </div>\n          \n          <!-- <div class=\"info-row\">\n            <span class=\"label\">创建者ID：</span>\n            <span class=\"value\">{{ activity.creatorId }}</span>\n          </div> -->\n          \n          <div class=\"info-row description\">\n            <span class=\"label\">活动描述：</span>\n            <div class=\"value\">{{ activity.description }}</div>\n          </div>\n        </div>\n        \n        <div class=\"card-footer\">\n            <!-- 只有学生角色才显示报名相关按钮 -->\n            <!-- 学生已报名且报名截止时间未到，显示取消报名按钮 -->\n            <el-button v-if=\"userRole === 'STUDENT' && hasRegistered && activity && activity.registrationDeadline && new Date(activity.registrationDeadline) > new Date() && activity.status !== 'COMPLETED'\" type=\"info\" @click=\"handleCancelJoin\" :loading=\"joinLoading\">取消报名</el-button>\n            <!-- 学生未报名且满足报名条件，显示立即报名按钮 -->\n            <el-button v-else-if=\"userRole === 'STUDENT' && canJoin(activity)\" type=\"primary\" @click=\"handleJoin\" :loading=\"joinLoading\">立即报名</el-button>\n            <!-- 学生已报名且活动已完成，显示生成参与证明按钮 -->\n            <el-button v-if=\"userRole === 'STUDENT' && hasRegistered && activity && activity.status === 'COMPLETED'\" type=\"success\" @click=\"handleGenerateCertificate\" :loading=\"joinLoading\">生成参赛证明</el-button>\n            <!-- 活动已完成，显示下载参赛人员名单按钮 -->\n              <template v-if=\"userRole !== 'STUDENT' && activity && activity.status === 'COMPLETED'\">\n                <el-button type=\"success\" @click=\"handleDownloadParticipants('excel')\">下载参赛名单(Excel)</el-button>\n                <el-button type=\"primary\" @click=\"handleDownloadParticipants('pdf')\">下载参赛名单(PDF)</el-button>\n              </template>\n          </div>\n      </el-card>\n    </div>\n    \n    <div v-else class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getActivityById, joinActivity, cancelJoinActivity, generateCertificate, downloadParticipants } from '@/api/activity'\n\nexport default {\n  name: 'ActivityDetail',\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const store = useStore()\n    \n    const loading = ref(true)\n    const joinLoading = ref(false)\n    const activity = ref({})\n    const hasRegistered = ref(false)\n    \n    const userRole = computed(() => store.getters.userRole)\n    const userId = computed(() => store.getters.userId || 3) // 直接从store获取userId，避免硬编码，保留默认值作为后备\n    \n    const hasPermission = (roles) => {\n      return roles.includes(userRole.value)\n    }\n    \n    const getTypeName = (type) => {\n      const typeMap = {\n        'LECTURE': '讲座',\n        'COMPETITION': '赛事',\n        'TRAINING': '培训'\n      }\n      return typeMap[type] || type\n    }\n    \n    const getTypeTag = (type) => {\n      const tagMap = {\n        'LECTURE': 'primary',\n        'COMPETITION': 'success',\n        'TRAINING': 'warning'\n      }\n      return tagMap[type] || 'info'\n    }\n    \n    const getStatusName = (status) => {\n      const statusMap = {\n        'DRAFT': '草稿',\n        'PUBLISHED': '已发布',\n        'CANCELLED': '已取消',\n        'COMPLETED': '已完成'\n      }\n      return statusMap[status] || status\n    }\n    \n    const getStatusTag = (status) => {\n      const tagMap = {\n        'DRAFT': 'info',\n        'PUBLISHED': 'success',\n        'CANCELLED': 'danger',\n        'COMPLETED': 'warning'\n      }\n      return tagMap[status] || 'info'\n    }\n    \n    const formatDateTime = (dateTime) => {\n      if (!dateTime) return '-'\n      // 处理日期时间格式，确保正确显示\n      const date = new Date(dateTime)\n      if (isNaN(date.getTime())) return dateTime\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      })\n    }\n    \n    // 判断当前用户是否已报名活动\n    const isUserRegistered = () => {\n      // 添加详细调试信息\n      console.log('判断报名状态 - 活动ID:', activity.value.id, '用户ID:', userId.value)\n      \n      // 确保活动对象存在\n      if (!activity.value || !activity.value.id) {\n        console.log('活动对象不存在或ID无效')\n        return false\n      }\n      \n      // 优先使用后端直接返回的报名状态标志\n      if (activity.value.hasRegistered !== undefined) {\n        console.log('使用后端返回的hasRegistered字段:', activity.value.hasRegistered)\n        return activity.value.hasRegistered\n      }\n      \n      // 1. 检查是否有registeredUsers数组包含当前用户ID\n      if (activity.value.registeredUsers && Array.isArray(activity.value.registeredUsers)) {\n        const result = activity.value.registeredUsers.includes(userId.value)\n        console.log('通过registeredUsers检查结果:', result)\n        return result\n      }\n      \n      // 2. 检查是否有registrations数组，包含当前用户的报名记录\n      if (activity.value.registrations && Array.isArray(activity.value.registrations)) {\n        const result = activity.value.registrations.some(reg => reg.userId === userId.value)\n        console.log('通过registrations检查结果:', result)\n        return result\n      }\n      \n      // 默认返回false，确保未报名用户不显示已报名状态\n      return false\n    }\n    \n    const canJoin = (activity) => {\n      // 使用hasRegistered状态变量，而不是直接调用函数，确保UI一致性\n      return userRole.value === 'STUDENT' && \n             activity.status === 'PUBLISHED' && \n             new Date(activity.registrationDeadline) > new Date() &&\n             !hasRegistered.value\n    }\n    \n    const loadActivityData = async () => {\n      loading.value = true\n      try {\n        const activityId = route.params.id\n        console.log('加载活动详情 - 活动ID:', activityId)\n        console.log('当前登录用户ID:', userId.value, '角色:', userRole.value)\n        \n        const response = await getActivityById(activityId)\n        \n        if (response.code === 200) {\n          activity.value = response.data || {}\n          // 添加详细日志以便调试\n          console.log('活动数据:', activity.value)\n          console.log('用户角色:', userRole.value)\n          console.log('用户ID:', userId.value)\n          console.log('活动ID:', activity.value.id)\n          \n          // 明确计算并记录报名状态\n          const registeredStatus = isUserRegistered()\n          console.log('用户报名状态:', registeredStatus)\n          \n          // 确保hasRegistered的值与计算结果一致\n          hasRegistered.value = registeredStatus\n          \n          console.log('报名截止时间:', activity.value.registrationDeadline)\n          console.log('是否已过截止时间:', new Date(activity.value.registrationDeadline) <= new Date())\n          console.log('canJoin返回结果:', canJoin(activity.value))\n        } else {\n          ElMessage.error(response.message || '加载活动详情失败')\n          // 如果加载失败，跳转回列表页\n          router.push('/dashboard/activities')\n        }\n      } catch (error) {\n        console.error('加载活动详情失败:', error)\n        ElMessage.error('加载活动详情失败')\n        router.push('/dashboard/activities')\n      } finally {\n        loading.value = false\n      }\n    }\n    \n    const handleBack = () => {\n      router.push('/dashboard/activities')\n    }\n    \n    const handleJoin = async () => {\n      joinLoading.value = true\n      try {\n        // 先进行基本验证\n        if (!activity.value.id) {\n          ElMessage.error('活动信息错误，无法报名')\n          return\n        }\n        \n        // 检查报名截止时间\n        if (new Date(activity.value.registrationDeadline) <= new Date()) {\n          ElMessage.warning('报名已截止')\n          return\n        }\n        \n        // 检查是否已达到最大参与人数\n        if (activity.value.currentParticipants >= activity.value.maxParticipants) {\n          ElMessage.warning('活动人数已满')\n          return\n        }\n        \n        // 再次确认用户未报名，防止重复报名\n        if (hasRegistered.value) {\n          ElMessage.warning('您已报名该活动')\n          return\n        }\n        \n        const response = await joinActivity(activity.value.id)\n        \n        if (response.code === 200 || response.success) {\n          ElMessage.success(response.message || '报名成功')\n          // 立即更新本地状态，提升用户体验\n          hasRegistered.value = true\n          // 重新加载活动数据以更新参与人数和其他信息\n          setTimeout(() => {\n            loadActivityData()\n          }, 500)\n        } else {\n          ElMessage.error(response.message || '报名失败')\n        }\n      } catch (error) {\n        console.error('报名失败:', error)\n        // 从错误响应中提取消息\n        const errorMsg = error.response?.data?.message || error.message || '报名失败，请稍后重试'\n        ElMessage.error(errorMsg)\n      } finally {\n        joinLoading.value = false\n      }\n    }\n    \n    const handleCancelJoin = async () => {\n      joinLoading.value = true\n      try {\n        // 先进行基本验证\n        if (!activity.value.id) {\n          ElMessage.error('活动信息错误，无法取消报名')\n          return\n        }\n        \n        // 再次确认用户已报名\n        if (!hasRegistered.value) {\n          ElMessage.warning('您尚未报名该活动')\n          return\n        }\n        \n        const response = await cancelJoinActivity(activity.value.id)\n        \n        if (response.code === 200 || response.success) {\n          ElMessage.success(response.message || '取消报名成功')\n          // 立即更新本地状态，提升用户体验\n          hasRegistered.value = false\n          // 重新加载活动数据以更新参与人数和其他信息\n          setTimeout(() => {\n            loadActivityData()\n          }, 500)\n        } else {\n          ElMessage.error(response.message || '取消报名失败')\n        }\n      } catch (error) {\n        console.error('取消报名失败:', error)\n        const errorMsg = error.response?.data?.message || error.message || '取消报名失败，请稍后重试'\n        ElMessage.error(errorMsg)\n      } finally {\n        joinLoading.value = false\n      }\n    }\n    \n    const handleGenerateCertificate = async () => {\n      joinLoading.value = true\n      try {\n        // 先进行基本验证\n        if (!activity.value.id) {\n          ElMessage.error('活动信息错误，无法生成参与证明')\n          return\n        }\n        \n        // 检查用户是否已报名\n        if (!hasRegistered.value) {\n          ElMessage.warning('您尚未报名该活动，无法生成参与证明')\n          return\n        }\n        \n        // 检查活动是否已完成\n        if (activity.value.status !== 'COMPLETED') {\n          ElMessage.warning('活动尚未完成，无法生成参与证明')\n          return\n        }\n        \n        // 调用生成证明接口\n        const response = await generateCertificate(activity.value.id)\n        \n        if (response.code === 200 || response.success) {\n          // 跳转到证书查看页面\n          router.push(`/dashboard/activities/${activity.value.id}/certificate`)\n        } else {\n          ElMessage.error(response.message || '参与证明生成失败')\n        }\n      } catch (error) {\n        console.error('生成参与证明失败:', error)\n        const errorMsg = error.response?.data?.message || error.message || '生成参与证明失败，请稍后重试'\n        ElMessage.error(errorMsg)\n      } finally {\n        joinLoading.value = false\n      }\n    }\n    \n    const handleDownloadParticipants = async (type) => {\n      try {\n        // 调用API下载参与名单\n        const response = await downloadParticipants(activity.value.id, type)\n        \n        // 确保获取正确的响应数据\n        const blobData = response.data || response\n        \n        // 创建blob对象并下载\n        const blob = new Blob([blobData], {\n          type: type === 'excel' ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' : 'application/pdf'\n        })\n        const url = window.URL.createObjectURL(blob)\n        const link = document.createElement('a')\n        link.href = url\n        link.download = `活动参与者名单_${activity.value.id}_${new Date().getTime()}.${type === 'excel' ? 'xlsx' : 'pdf'}`\n        document.body.appendChild(link)\n        link.click()\n        \n        // 清理\n        setTimeout(() => {\n          document.body.removeChild(link)\n          window.URL.revokeObjectURL(url)\n        }, 100)\n        \n        ElMessage.success('下载成功')\n      } catch (error) {\n        console.error('下载失败:', error)\n        // 尝试从错误响应中获取更多信息\n        const errorMsg = error.response?.data?.message || error.message || '下载失败，请稍后重试'\n        ElMessage.error(errorMsg)\n      }\n    }\n    \n    onMounted(() => {\n      loadActivityData()\n    })\n    \n    return {\n      loading,\n      joinLoading,\n      activity,\n      hasRegistered,\n      userRole,\n      userId,\n      isUserRegistered,\n      getTypeName,\n      getTypeTag,\n      getStatusName,\n      getStatusTag,\n      formatDateTime,\n      canJoin,\n      handleBack,\n      handleJoin,\n      handleCancelJoin,\n      handleGenerateCertificate,\n      handleDownloadParticipants,\n    }\n  }\n}\n</script>\n\n<style scoped>\n.activity-detail {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.detail-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.card-header h3 {\n  margin: 0;\n  font-size: 1.5rem;\n}\n\n.detail-content {\n  margin-top: 20px;\n}\n\n.info-row {\n  display: flex;\n  margin-bottom: 16px;\n  align-items: flex-start;\n}\n\n.info-row.description {\n  align-items: flex-start;\n}\n\n.label {\n  width: 120px;\n  font-weight: 500;\n  color: #606266;\n}\n\n.value {\n  flex: 1;\n  color: #303133;\n}\n\n.description .value {\n  white-space: pre-wrap;\n  line-height: 1.8;\n}\n\n.loading-container {\n  margin-top: 20px;\n}\n\n.card-footer {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n</style>","import { render } from \"./ActivityDetail.vue?vue&type=template&id=4be355c9&scoped=true\"\nimport script from \"./ActivityDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ActivityDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ActivityDetail.vue?vue&type=style&index=0&id=4be355c9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4be355c9\"]])\n\nexport default __exports__"],"names":["getActivityList","params","url","method","getActivityById","id","createActivity","data","updateActivity","deleteActivity","joinActivity","activityId","cancelJoinActivity","generateCertificate","downloadParticipants","type","responseType","class","handleBack","loading","rows","animated","shadow","header","activity","title","getStatusTag","status","getStatusName","getTypeTag","getTypeName","organizer","location","formatDateTime","startTime","endTime","registrationDeadline","currentParticipants","maxParticipants","description","userRole","hasRegistered","Date","handleCancelJoin","joinLoading","canJoin","handleJoin","handleGenerateCertificate","handleDownloadParticipants","name","setup","router","route","store","getters","userId","typeMap","tagMap","statusMap","dateTime","date","isNaN","getTime","toLocaleString","year","month","day","hour","minute","second","isUserRegistered","console","log","value","undefined","registeredUsers","Array","isArray","result","includes","registrations","some","reg","loadActivityData","async","response","code","registeredStatus","error","message","push","warning","success","setTimeout","errorMsg","blobData","blob","Blob","window","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","__exports__","render"],"sourceRoot":""}